[{"/home/yazan/DevGig-frontend/src/index.js":"1","/home/yazan/DevGig-frontend/src/App.js":"2","/home/yazan/DevGig-frontend/src/FindTalent.js":"3","/home/yazan/DevGig-frontend/src/ContactUs.js":"4","/home/yazan/DevGig-frontend/src/componants/Home.js":"5","/home/yazan/DevGig-frontend/src/componants/Profile.js":"6","/home/yazan/DevGig-frontend/src/JobModal.js":"7","/home/yazan/DevGig-frontend/src/componants/Header.js":"8","/home/yazan/DevGig-frontend/src/componants/Footer.js":"9","/home/yazan/DevGig-frontend/src/componants/LoginButton.js":"10","/home/yazan/DevGig-frontend/src/componants/LogOutButton.js":"11","/home/yazan/DevGig-frontend/src/componants/PostWork.js":"12","/home/yazan/DevGig-frontend/src/componants/PostWorkModal.js":"13","/home/yazan/DevGig-frontend/src/componants/Findtalentcard.js":"14","/home/yazan/DevGig-frontend/src/componants/Profilecard.js":"15"},{"size":373,"mtime":1626091356836,"results":"16","hashOfConfig":"17"},{"size":1252,"mtime":1626104187786,"results":"18","hashOfConfig":"17"},{"size":2735,"mtime":1626104838436,"results":"19","hashOfConfig":"17"},{"size":2735,"mtime":1626091356836,"results":"20","hashOfConfig":"17"},{"size":2454,"mtime":1626027001060,"results":"21","hashOfConfig":"17"},{"size":8887,"mtime":1626103156986,"results":"22","hashOfConfig":"17"},{"size":1830,"mtime":1626103156986,"results":"23","hashOfConfig":"17"},{"size":1295,"mtime":1626104672696,"results":"24","hashOfConfig":"17"},{"size":833,"mtime":1626104710746,"results":"25","hashOfConfig":"17"},{"size":643,"mtime":1626091356836,"results":"26","hashOfConfig":"17"},{"size":408,"mtime":1626091356836,"results":"27","hashOfConfig":"17"},{"size":3531,"mtime":1626116010476,"results":"28","hashOfConfig":"17"},{"size":1443,"mtime":1626109759316,"results":"29","hashOfConfig":"17"},{"size":2507,"mtime":1626103156986,"results":"30","hashOfConfig":"17"},{"size":2505,"mtime":1626103156986,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"10dwygp",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/yazan/DevGig-frontend/src/index.js",[],["66","67"],"/home/yazan/DevGig-frontend/src/App.js",[],"/home/yazan/DevGig-frontend/src/FindTalent.js",["68","69","70","71","72"],"/home/yazan/DevGig-frontend/src/ContactUs.js",["73","74"],"import React, { Component } from 'react'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport CardGroup from 'react-bootstrap/CardGroup'\nimport Header from './componants/Header'\n\nclass ContactUs extends Component {\n    render() {\n        return (\n            <div>\n              <Header/>\n                <Jumbotron fluid>\n  <Container>\n    <h1 style={{textAlign:'center'}}>    Contact Us  </h1>\n  \n  </Container>\n</Jumbotron>\n<h1 style={{textAlign:'center'}}>Our Team</h1>\n<CardGroup>\n  <Card>\n    <Card.Img variant=\"top\" src=\"https://marketifythemes.com/html/waxon/img/about/2.jpg\" />\n    <Card.Body>\n      <Card.Title>Card title</Card.Title>\n      <Card.Text>\n        This is a wider card with supporting text below as a natural lead-in to\n        additional content. This content is a little bit longer.\n      </Card.Text>\n    </Card.Body>\n    <Card.Footer>\n      <small className=\"text-muted\">Last updated 3 mins ago</small>\n    </Card.Footer>\n  </Card>\n  <Card>\n    <Card.Img variant=\"top\" src=\"https://marketifythemes.com/html/waxon/img/about/2.jpg\" />\n    <Card.Body>\n      <Card.Title>Card title</Card.Title>\n      <Card.Text>\n        This card has supporting text below as a natural lead-in to additional\n        content.{' '}\n      </Card.Text>\n    </Card.Body>\n    <Card.Footer>\n      <small className=\"text-muted\">Last updated 3 mins ago</small>\n    </Card.Footer>\n  </Card>\n  <Card>\n    <Card.Img variant=\"top\" src=\"https://marketifythemes.com/html/waxon/img/about/2.jpg\" />\n    <Card.Body>\n      <Card.Title>Card title</Card.Title>\n      <Card.Text>\n        This is a wider card with supporting text below as a natural lead-in to\n        additional content. This card has even longer content than the first to\n        show that equal height action.\n      </Card.Text>\n    </Card.Body>\n    <Card.Footer>\n      <small className=\"text-muted\">Last updated 3 mins ago</small>\n    </Card.Footer>\n  </Card>\n</CardGroup>\n\n<h1 style={{textAlign:'center'}}>Contact Us Form</h1>\n<Form>\n  <Form.Group controlId=\"exampleForm.ControlInput1\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"name@example.com\" />\n  </Form.Group>\n  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n    <Form.Label>Example textarea</Form.Label>\n    <Form.Control as=\"textarea\" rows={3} />\n  </Form.Group>\n  \n  <Button variant=\"primary\" type=\"submit\">\n    Submit\n  </Button>\n</Form>\n           \n            </div>\n        )\n    }\n}\n\nexport default ContactUs\n","/home/yazan/DevGig-frontend/src/componants/Home.js",[],"/home/yazan/DevGig-frontend/src/componants/Profile.js",["75"],"import axios from 'axios';\nimport React, { Component } from 'react';\nimport './profile.css';\nimport Profilecard from './Profilecard';\n// import { Image } from 'react-bootstrap'\n\nimport Header from './Header'\nimport Findtalent from './Findtalentcard';\n\n\n\nexport class Profile extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            newName: '',\n            newSkills: '',\n            newBio: '',\n            newContact: '',\n            newPhone: '',\n            newWeb: '',\n            dataformBack: [],\n        }\n    }\n\n    nameONchange = (e) => {\n        (e).preventDefault();\n        this.setState({\n            newName: e.target.value\n        })\n        console.log('newName', e.target.value)\n    }\n    SkillsONchange = (e) => {\n        (e).preventDefault();\n        this.setState({\n            newSkills: e.target.value\n        })\n        //    console.log('newSkills',e.target.value)\n    }\n\n    BioONchange = (e) => {\n        (e).preventDefault();\n        this.setState({\n            newBio: e.target.value\n        })\n        //    console.log('newBio',e.target.value)\n    }\n\n    contactONchange = (e) => {\n        (e).preventDefault();\n        this.setState({\n            newContact: e.target.value\n        })\n        //    console.log('newContact',e.target.value)\n    }\n\n    phoneONchange = (e) => {\n        (e).preventDefault();\n        this.setState({\n            newPhone: e.target.value\n        })\n        //    console.log('newPhone',e.target.value)\n    }\n\n    websiteONchange = (e) => {\n        (e).preventDefault();\n        this.setState({\n            newWeb: e.target.value\n        })\n        //    console.log('newWeb',e.target.value)\n    }\n\n    urProjectONchangeA = (e) => {\n        (e).preventDefault();\n        this.setState({\n            urProjectA: e.target.value\n        })\n        //    console.log('urProject A',e.target.value)\n    }\n\n    urProjectONchangeB = (e) => {\n        (e).preventDefault();\n        this.setState({\n            urProjectB: e.target.value\n        })\n        console.log('urProject B', e.target.value)\n    }\n\n    urProjectONchangeC = (e) => {\n        (e).preventDefault();\n        this.setState({\n            urProjectC: e.target.value\n        })\n        console.log('urProject C', e.target.value)\n    }\n\n    imageONchange = (e) => {\n        (e).preventDefault();\n        this.setState({\n            urProjectC: e.target.value\n        })\n        //    console.log('image',e.target.value)\n    }\n\n\n    openPrimary = (e) => {\n        (e).preventDefault();\n        this.setState({\n            // urProjectC: e.target.values\n        })\n\n    }\n    onclickPrimaryPro = (e) => {\n        (e).preventDefault();\n        window.location.href = \"http://localhost:3000/Profile\";\n\n    }\n\n\n    // componentDidMount = async () => {\n    //     // if (this.props.auth0.isAuthenticated) {\n    //     //   this.props.auth0.getIdTokenClaims()\n    //     //     .then(async(res) => {\n    //     //       const jwt = await res.__raw;\n    //     //       const config = {\n    //     //         headers: { \"Authorization\": `Bearer ${jwt}`,\"Access-Control-Allow-Origin\": \"*\", \"Access-Control-Allow-Credentials\": true, 'Content-Type': 'application/json', 'mode': 'no-cors' },\n    //     //         method: 'get',\n    //     //         baseURL: 'http://localhost:8080',\n    //     //         url: '/authorize'\n    //     //       }\n    //     //       axios(config)\n    //     //         .then(axiosResults => console.log(axiosResults.data))\n    //     //         .catch(err => console.error(err));\n    //     //     })\n    //     //     .catch(err => console.error(err));\n    //     // }\n\n    //     // let email = this.props.auth0.user.email\n    //     // console.log('email',email)\n    //     const url = `http://localhost:8080/test?email=munther.abdlrahman@gmail.com`;\n    //     axios.get(url).then(response => {\n    //         console.log('previous data', response);\n    //         this.setState({\n    //             dataformBack: response.data\n    //         })\n    //     })\n\n\n    // }\n    postFreelance = (e) => {\n        (e).preventDefault();\n        try {\n            const reqBody = {\n                email: \"munther.abdlrahman@gmail.com\",\n                name: this.state.newName,\n                skills: this.state.newSkills,\n                bio: this.state.newBio,\n                phone: this.state.newPhone,\n                websiteUrl: this.state.newWeb,\n            }\n\n            const url = `http://localhost:8000/freelance`;\n            axios.post(url, reqBody).then(response => {\n                console.log('new data', response.data);\n                console.log('reqBody', reqBody)\n                this.setState({\n                    dataformBack: response.data\n\n                })\n            })\n        } catch {\n            console.log('error')\n        }\n    }\n\n    render() {\n        return (\n            <>\n            \n                <Header />\n                <h1 >User Info</h1>\n                <section>\n                    <h3 class=\"nameM\" >\n                        Name: jhony deep\n                    </h3>\n                    <h3 id=\"firstH\" class=\"nameM\" >\n                        Email:zxy@mail.com\n                    </h3>\n                    <img class=\"ImgH\" src=\"https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308458-stock-illustration-unknown-person-silhouette-profile-picture.jpg\" alt=\"person\" />\n                </section>\n                <br />\n                <br />\n                <br />\n                <br />\n                <section>\n                    <form id=\"formP\">\n                        <h3>Apply For Promotion</h3>\n                        <label for=\"fname\">Name</label><br />\n                        <input type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"Your name:\" onChange={(e) => this.nameONchange(e)} />\n                        <br />\n                        <label for=\"skill\">Skills</label><br />\n                        <input type=\"text\" id=\"fname\" placeholder=\"Your Skills:\" onChange={(e) => this.SkillsONchange(e)} />\n                        <br />\n                        <label for=\"bio\">Bio</label><br />\n                        <input type=\"text\" id=\"fname\" placeholder=\"Bio:\" onChange={(e) => this.BioONchange(e)} />\n                        <br />\n                        <br />\n                        <br />\n                        <br />\n                        <br />\n                        <h3>Work Samples</h3>\n                        <br />\n                        <br />\n                        {/* <label for=\"bio\">Your Website A :-  </label>\n                        <input required aria-required=\"true\"id=\"fname\" class=\"input\" id=\"email\" name=\"E-mail\" placeholder='Best of  Your website...' onChange={(e) => this.urProjectONchangeA(e)} />\n                        <br />\n                        <label for=\"bio\">Your Website B :- </label>\n                        <input required aria-required=\"true\" id=\"fname\" class=\"input\" id=\"email\" name=\"E-mail\" placeholder='Best of  Your website...' onChange={(e) => this.urProjectONchangeB(e)} />\n                        <br />\n                        <label for=\"bio\">Your Website C :-  </label>\n                        <input required aria-required=\"true\" id=\"fname\" class=\"input\" id=\"email\" name=\"E-mail\" placeholder='Your GitHub...' onChange={(e) => this.openPrimary(e)} />\n                        <br />\n                        <label class=\"label\" for=\"url\">Upload Url image for best project :-</label>\n                        <input   class=\"input\" id=\"url_txt\" name=\"Url\" type=\"url\"  placeholder='Your Img Url...' required onChange={(e) => { this.imageONchange(e) }} />\n                        <br /> */}\n                        <br />\n                        <h3>Contact Info</h3><br />\n                        <br />\n                        <label for=\"fname\">Phone</label><br />\n                        <input type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"Phone #\" onChange={(e) => this.phoneONchange(e)} />\n                        <br />\n                        <label for=\"fname\">Website Url</label><br />\n                        <input required aria-required=\"true\" type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"Website Url\" onChange={(e) => this.websiteONchange(e)} />\n                        <br />\n                        <br />\n                        <button onClick={(e) => this.postFreelance(e)} >Premote yourself</button>\n                    </form>\n                </section>\n                {\n                    this.state.dataformBack.map((element, index) => {\n                        return <Profilecard name={element.name} bio={element.bio} skills={element.skills} phone={element.phone} websiteUrl={element.websiteUrl} />\n                    })\n                }\n            </>\n        )\n    }\n}\n\nexport default Profile\n\n\n","/home/yazan/DevGig-frontend/src/JobModal.js",[],"/home/yazan/DevGig-frontend/src/componants/Header.js",["76","77","78"],"import React, { Component } from 'react';\nimport './Header.css';\nimport { withAuth0 } from '@auth0/auth0-react';\nimport Button from 'react-bootstrap/Button'\n\nimport {\n    BrowserRouter as Router,\n    Link\n} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport LoginButton from './LoginButton'\nimport LogOutButton from './LogOutButton';\nimport ContactUs from '../ContactUs';\n\n\nclass Header extends Component {\n    render() {\n        const { user, isAuthenticated } = this.props.auth0;\n        console.log(this.props.auth0)\n        console.log(user);\n        console.log(isAuthenticated);\n        return (\n            <div>\n                <Navbar>\n\n\n                    <Link to=\"/\" className=\"Logo\">DivGig</Link>\n                    <Link to=\"/postwork\" className=\"navBar\">Post Work</Link>\n                    <Link to=\"/findtalent\" className=\"navBar\">Find Talent</Link>\n                    <Link to=\"/contactus\" className=\"navBar\">Contact us</Link>\n                    {isAuthenticated ? <Link to=\"/profile\" className=\"navBar\">Profile</Link> : ''}\n                    {isAuthenticated ? <LogOutButton /> : <LoginButton />}\n\n                </Navbar>\n            </div>\n        )\n    }\n};\n\nexport default withAuth0(Header);\n","/home/yazan/DevGig-frontend/src/componants/Footer.js",[],"/home/yazan/DevGig-frontend/src/componants/LoginButton.js",[],"/home/yazan/DevGig-frontend/src/componants/LogOutButton.js",[],"/home/yazan/DevGig-frontend/src/componants/PostWork.js",[],"/home/yazan/DevGig-frontend/src/componants/PostWorkModal.js",[],"/home/yazan/DevGig-frontend/src/componants/Findtalentcard.js",[],"/home/yazan/DevGig-frontend/src/componants/Profilecard.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":13},{"ruleId":"83","severity":1,"message":"87","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":17},{"ruleId":"83","severity":1,"message":"88","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":11},{"ruleId":"83","severity":1,"message":"89","line":15,"column":8,"nodeType":"85","messageId":"86","endLine":15,"endColumn":14},{"ruleId":"83","severity":1,"message":"90","line":16,"column":8,"nodeType":"85","messageId":"86","endLine":16,"endColumn":22},{"ruleId":"83","severity":1,"message":"88","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":11},{"ruleId":"83","severity":1,"message":"91","line":7,"column":8,"nodeType":"85","messageId":"86","endLine":7,"endColumn":11},{"ruleId":"83","severity":1,"message":"92","line":8,"column":8,"nodeType":"85","messageId":"86","endLine":8,"endColumn":18},{"ruleId":"83","severity":1,"message":"93","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":14},{"ruleId":"83","severity":1,"message":"94","line":7,"column":22,"nodeType":"85","messageId":"86","endLine":7,"endColumn":28},{"ruleId":"83","severity":1,"message":"95","line":14,"column":8,"nodeType":"85","messageId":"86","endLine":14,"endColumn":17},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Row' is defined but never used.","'Footer' is defined but never used.","'Findtalentcard' is defined but never used.","'Col' is defined but never used.","'Findtalent' is defined but never used.","'Button' is defined but never used.","'Router' is defined but never used.","'ContactUs' is defined but never used.","no-global-assign","no-unsafe-negation"]